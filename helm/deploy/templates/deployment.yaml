apiVersion: apps/v1                         #
kind: Deployment                            #
metadata:
  name: ghost                               #
  labels:
    app: myghost                            #
spec:
  replicas: 1                               #
  
  selector:
    matchLabels:
      app: ghost                            #
  template:
    metadata:
      annotations:
      labels:
        app: ghost                          #
    spec:
      imagePullSecrets:
      serviceAccountName: 
      securityContext:
      containers:
        - name: ghostshell                  #
          securityContext: 
          image: rolandockit/ginshell:1.0   #
          imagePullPolicy:
          ports:
            - name: pythonport              #
              containerPort: 5000           #
              protocol: TCP

          livenessProbe:
            #Types of probes
            #First
            httpGet:
              path: /
              port: 5000                    # Checks HTTP connection on this port
            #Second
            tcpSocket:
              port: 5000                    # Checks TCP connection on this port. For non HTTP servers
            #Third
            exec:
              command:
                - cat                       #these is an examples. It can be any command
                - /tmp/healthy              #these is an examples. It can be any command
            #Should be included with any type of livenessProbe
            #Note: Don't use initial deley seconds if configuring startupProbe
            initialDelaySeconds: 3          # How many seconds to wait before starting health checks
            periodSeconds: 3                # How frequent healthchecks should be performed
            failureThreshold: 2             # How many consecutive failures before container is considered unhealthy
          
          readinessProbe:
            httpGet:
              path: /
              port: 5000
            initialDelaySeconds: 3          #
            periodSeconds: 3

          startupProbe:
            httpGet:
              path: /
              port: 5000
            failureThreshold: 10

          minReadySeconds: 0               #How long since startupProbe passed before the pod is considered Ready

          resources:
            #Resource Request
            requests:
              cpu: "100m"                    #This is the amount of cpu that must be available before the scheduler can schedule a container on the node
              memory: "10Mi"                 #This is the amount of memory that must be available before the scheduler can schedule a container on the node
            #Resource Limit
            limits:
              cpu: "250m"                   #If the container/pod consumes cpu resource exceeding this value, the pod or container will be terminated
              memory: "25Mi"                #If the container/pod consumes memory resource exceeding this value, the pod or container will be terminated
      nodeSelector:
      affinity:
        nodeAffinity:
          #Hard affinity
          requiredDuringSchedulingIgnoredDuringExecution: # A pod with this affinity will never be scheduled on a node that does not match the selector expression
            nodeSelectorTerms:
              - matchExpressions:
                - key: cloud.google.com/gke-preemptible
                  operator: DoesNotExist
          #Soft affinity
          preferredDuringSchedulingIgnoredDuringExecution: # This means: "Kubernetes, please schedule this pod on this node if you can; if not, it dosen't matter"
            - preference:
                matchExpressions:
                  - key: cloud.google.com/gke-preemptible
                    operator: Exists
              weight: 100
      tolerations:
